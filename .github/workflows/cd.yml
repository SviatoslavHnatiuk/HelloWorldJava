name: CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Compile Java sources
        run: |
          mkdir -p HelloWorldJava/HelloWorldJava/out/production/HelloWorldJava
          javac -d HelloWorldJava/HelloWorldJava/out/production/HelloWorldJava $(find HelloWorldJava/HelloWorldJava/src -name "*.java")

      - name: Tar compiled classes
        run: |
          tar czf HelloWorldJava/HelloWorldJava/out/production/compiled_classes.tar.gz -C HelloWorldJava/HelloWorldJava/out/production/HelloWorldJava .

      - name: Copy compiled classes to Azure VM
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.AZURE_HOST }}
          username: ${{ secrets.AZURE_USER }}
          key: ${{ secrets.AZURE_SSH_KEY }}
          port: 22
          source: "HelloWorldJava/HelloWorldJava/out/production/compiled_classes.tar.gz"
          target: "~/app/out/production"

      - name: SSH and deploy with Docker
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AZURE_HOST }}
          username: ${{ secrets.AZURE_USER }}
          key: ${{ secrets.AZURE_SSH_KEY }}
          port: 22
          script: |
            set -e
            cd ~/app

            echo "Extracting compiled classes..."
            mkdir -p out/production/HelloWorldJava
            tar xzf out/production/compiled_classes.tar.gz -C out/production/HelloWorldJava/

            echo "Backing up existing image (if any)..."
            if docker image inspect helloworldjava:latest > /dev/null 2>&1; then
              docker tag helloworldjava:latest helloworldjava:backup
            else
              echo "No image to backup"
            fi

            echo "Stopping and removing old container..."
            docker stop app || true
            docker rm app || true

            echo "Building new Docker image..."
            docker build -t helloworldjava:latest HelloWorldJava/HelloWorldJava

            echo "Running new container..."
            docker run -d --name app -p 80:8080 helloworldjava:latest

      - name: Health check (CLI)
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AZURE_HOST }}
          username: ${{ secrets.AZURE_USER }}
          key: ${{ secrets.AZURE_SSH_KEY }}
          port: 22
          script: |
            docker exec app java -cp /app/out/production com.Main --health-check

      - name: Rollback if health check fails
        if: failure()
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AZURE_HOST }}
          username: ${{ secrets.AZURE_USER }}
          key: ${{ secrets.AZURE_SSH_KEY }}
          port: 22
          script: |
            echo "Health check failed. Rolling back..."
            docker stop app || true
            docker rm app || true

            if docker image inspect helloworldjava:backup > /dev/null 2>&1; then
              echo "Restoring from backup..."
              docker run -d --name app -p 80:8080 helloworldjava:backup
            else
              echo "No backup image available. Rollback failed."
              exit 1
            fi
